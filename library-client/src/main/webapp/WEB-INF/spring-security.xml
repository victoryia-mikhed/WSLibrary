<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                 http://www.springframework.org/schema/security
                 http://www.springframework.org/schema/security/spring-security.xsd">
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/news*" access="hasAuthority('admin')"/>
        <intercept-url pattern="/main*" access="hasAuthority('admin')"/>
        <intercept-url pattern="/authors*" access="hasAuthority('admin')"/>
        <intercept-url pattern="/tags*" access="hasAuthority('admin')"/>
        <form-login
                login-page="/login"
                login-processing-url="/j_spring_security_check"
                default-target-url="/main"
                authentication-failure-url="/login?error"
                always-use-default-target="true"/>
        <logout logout-success-url="/login?logout"
                logout-url="/j_spring_security_logout"/>
    </http>
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT USERNAME as username, PASSWORD as password, 1 AS enabled FROM USERS WHERE USERNAME=?"
                               authorities-by-username-query=
                                       "SELECT USERS.USERNAME as username, ROLES.ROLE_NAME as authority from USERS,ROLES where USERS.USERNAME=? AND USERS.ROLE=ROLES.ROLE_ID"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>